#
# Copyright BYOWares
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format


[versions]
agrona = "2.0.0"
disruptor = "4.0.0"
guardian = "1.1.2"
jPlatform = "1.11.4"
jackson = "2.18.2"
junit = "5.11.4"
log4j = "2.24.3"
opentest4j = "1.3.0"
slf4j = "2.0.16"
snake = "2.3"


[libraries]
agrona = { group = "org.agrona", name = "agrona", version.ref = "agrona" }
disruptor = { group = "com.lmax", name = "disruptor", version.ref = "disruptor" }

guardian = { group = "org.apiguardian", name = "apiguardian-api", version.ref = "guardian" }

jackson-anno = { group = "com.fasterxml.jackson.core", name = "jackson-annotations", version.ref = "jackson" }
jackson-bind = { group = "com.fasterxml.jackson.core", name = "jackson-databind", version.ref = "jackson" }
jackson-core = { group = "com.fasterxml.jackson.core", name = "jackson-core", version.ref = "jackson" }
jackson-yaml = { group = "com.fasterxml.jackson.dataformat", name = "jackson-dataformat-yaml", version.ref = "jackson" }

junit = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junit" }
junit-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit" }
junit-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit" }
junit-params = { group = "org.junit.jupiter", name = "junit-jupiter-params", version.ref = "junit" }

junitP-commons = { group = "org.junit.platform", name = "junit-platform-commons", version.ref = "jPlatform" }
junitP-engine = { group = "org.junit.platform", name = "junit-platform-engine", version.ref = "jPlatform" }
junitP-launcher = { group = "org.junit.platform", name = "junit-platform-launcher", version.ref = "jPlatform" }

log4J-api = { group = "org.apache.logging.log4j", name = "log4j-api", version.ref = "log4j" }
log4J-core = { group = "org.apache.logging.log4j", name = "log4j-core", version.ref = "log4j" }
log4J-impl = { group = "org.apache.logging.log4j", name = "log4j-slf4j2-impl", version.ref = "log4j" }
log4J-json = { group = "org.apache.logging.log4j", name = "log4j-layout-template-json", version.ref = "log4j" }

opentest4J = { group = "org.opentest4j", name = "opentest4j", version.ref = "opentest4j" }

slf4J-api = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4j" }
slf4J-jcl = { group = "org.slf4j", name = "jcl-over-slf4j", version.ref = "slf4j" }
slf4J-jul = { group = "org.slf4j", name = "jul-to-slf4j", version.ref = "slf4j" }
slf4J-log = { group = "org.slf4j", name = "log4j-over-slf4j", version.ref = "slf4j" }

snakeYaml = { group = "org.yaml", name = "snakeyaml", version.ref = "snake" }


[bundles]
log4jImpl = ["slf4J-api"]
log4jRun = [
    "slf4J-jcl", "slf4J-log", "slf4J-jul",
    "log4J-impl", "log4J-core", "log4J-api", "log4J-json",
    "jackson-anno", "jackson-bind", "jackson-core", "jackson-yaml", "snakeYaml"
]

junitImpl = ["junit", "junit-api", "junit-params", "guardian"]
junitRun = ["junit-engine", "opentest4J", "junitP-launcher", "junitP-commons", "junitP-engine"]
